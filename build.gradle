buildscript {
    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    repositories {

        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'java'
    id 'maven-publish'
}

group = 'com.github.wangjin'
version = '1.0.1'
sourceCompatibility = '1.8'

apply plugin: "io.spring.dependency-management"

dependencies {

    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.alibaba:fastjson'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

repositories {

    // 开发jar包时使用，需在本地添加local.properties配置文件，并配置"jarDevMode=true"
    File file = rootProject.file("local.properties")
    if (file.exists()) {
        Properties p = new Properties()
        p.load(file.newDataInputStream())
        if (p.get("jarDevMode")) {
            mavenLocal()
        }
    }

    maven {
        url 'https://maven.aliyun.com/repository/public'
    }
}

jar {
    enabled = true
}

bootJar {
    enabled = false
}


publishing {

    repositories {
        mavenLocal()
    }

    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}